import client
from myntl import modinv

# Get values from the client
e, cipher = client.getQ2()
print("e:", e)
print("cipher:", cipher)

# Set p and q
p = 116850431743094068032621068710682487329065409066679515041799082237470668612760752213161069810675385760839384108468217235237853078997546274208873858689584116956248117216286091755078554518285378327997451863872521054856855825463275859462181542048697917915193824024042372871319839004967764959491096412084612097181
q = 168889402649683035645395258609712769445733198549413856436578168291992720277866794119252175569873838690286380297754513747259908211343779470389841114874279180826585338219720574046290259748483833225377027729239625917589045632005856265979194006747960811834534532430312127713237315909214290317781671926630495102699

# To calculate: m = c^d mod n (where d = e^-1 mod Ï†(n))

# First, we need to calculate n (p * q)
n = p * q

# We need to calculate phi_n
phi_n = (p - 1) * (q - 1)

# We also need to get e^-1
e_inv = modinv(e, phi_n)

# Calculating d
d = e_inv % phi_n

# Calculating m
m = pow(cipher, d, n)
print("\nm is:", m)

# Decode m
byte_length = (m.bit_length() + 7) // 8
message_bytes = m.to_bytes(byte_length, byteorder='big')
message = message_bytes.decode('utf-8', errors="ignore")

print()
print(message)

client.checkQ2(message)


